# Enable Pod communication through the Load Balancer
# see step 5: https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-with-cert-manager-on-digitalocean-kubernetes
# check with "kubectl describe orders -A"
- name: List records
  uri:
    url: https://api.digitalocean.com/v2/domains/{{domain}}/records
    return_content: yes
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{do_token}}"
  register: domain_records

- name: Update A record if defined
  shell: doctl compute domain records update {{domain}} --record-id {{a_records[0]}} --record-data {{lb_ip.stdout}} --record-ttl 300
  when: a_records[0] is not undefined
  vars:
    a_records: '{{ domain_records.json | json_query("domain_records[?(@.type == ''A'' && @.name == ''lb'')].id")}}'

- name: Create A record if not defined
  shell: doctl compute domain records create --record-type A --record-name lb --record-ttl 300 --record-data {{lb_ip.stdout}} {{domain}}
  when: a_records[0] is undefined
  vars:
    a_records: '{{ domain_records.json | json_query("domain_records[?(@.type == ''A'' && @.name == ''lb'')].id")}}'

- include_tasks: ingress-nginx-digital-ocean-override.yaml
  vars:
    lb_domain: "lb.{{ domain }}"

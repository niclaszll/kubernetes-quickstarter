---
- hosts: all
  become: true
  tasks:
    # - name: Update hosts entry with correct IP
    #   become: true
    #   shell: sed 's/127\.0\.2\.1/192\.168\.99\.100/g' -i /etc/hosts

    - name: Get Public IP
      shell: dig +short myip.opendns.com @resolver1.opendns.com
      register: public_ip

    - name: Add the user 'kubedev'
      ansible.builtin.user:
        name: kubedev
        home: /home/kubedev/
        shell: /bin/bash
        group: sudo

    - name: Add SSH key to 'kubedev'
      authorized_key:
        user: kubedev
        state: present
        key: "{{ lookup('file', pub_key) }}"

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Install additional necessary packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - bash-completion
          - mosquitto-clients
          - nfs-kernel-server

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - docker status

    - name: Add kubedev user to docker group
      user:
        name: kubedev
        group: docker

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

    - name: Source bash_completion
      become: true
      become_user: kubedev
      shell: source /usr/share/bash-completion/bash_completion
      args:
        executable: /bin/bash

    - name: Add kubectl bash completion
      become: true
      become_user: kubedev
      lineinfile:
        path: /home/kubedev/.bashrc
        line: source <(kubectl completion bash)
        state: present

    - name: Source .bashrc
      become: true
      become_user: kubedev
      shell: source /home/kubedev/.bashrc
      args:
        executable: /bin/bash

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Copy kubeadm config
      become: true
      become_user: kubedev
      copy:
        src: ./setup/kubernetes/kubeadm-config.yaml
        dest: /tmp/kubeadm-config.yaml

    # TODO: use ansbiles lineinfile
    - name: Replace localAPIEndpoint.advertiseAddress with correct IP
      shell: sed -i "s/vAdvertiseAddress/{{ public_ip.stdout }}/g" /tmp/kubeadm-config.yaml

    - name: Replace apiServer.CertSANs with correct IP
      shell: sed -i "s/vCertSANs/{{ public_ip.stdout }}/g" /tmp/kubeadm-config.yaml

    - name: Replace apiServer.CertSANs with correct IP
      shell: cat /tmp/kubeadm-config.yaml

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --config=/tmp/kubeadm-config.yaml

      # TODO: cleanup
    - name: Copy whole setup folder
      become: true
      become_user: kubedev
      copy:
        src: ./setup/
        dest: /home/kubedev/setup/

    - name: Setup kubeconfig for kubedev user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/kubedev/.kube
        - cp -i /etc/kubernetes/admin.conf /home/kubedev/.kube/config
        - chown kubedev:sudo -R /home/kubedev/.kube

    - name: Install Weave pod network
      become: true
      become_user: kubedev
      shell: kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')

    - name: Generate join command
      shell: kubeadm token create --print-join-command > /tmp/join-command

    # TODO
    - name: Copy join command to local file
      fetch:
        src: /tmp/join-command
        dest: join-command
        flat: true

    - name: Tainting master nodes
      become: true
      become_user: kubedev
      command: kubectl taint nodes --all node-role.kubernetes.io/master-

    - name: Install helm
      shell: "{{ item }}"
      with_items:
        - curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        - chmod 700 /tmp/get_helm.sh
        - /tmp/get_helm.sh

    - name: Add prometheus-community helm repo
      become: true
      become_user: kubedev
      community.kubernetes.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"

    - name: Deploy kube-prometheus-stack inside monitoring namespace
      become: true
      become_user: kubedev
      community.kubernetes.helm:
        name: prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        update_repo_cache: yes
        release_namespace: monitoring
        create_namespace: true
        values:
          prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues: false
          prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues: false

    # - name: Deploy MetalLB
    #   shell: "{{ item }}"
    #   with_items:
    #     - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.6/manifests/namespace.yaml
    #     - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.6/manifests/metallb.yaml
    #     - kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
    #     - kubectl create -f /home/kubedev/setup/kubernetes/metallb-config.yaml

    - name: Add ingress-nginx helm repo
      become: true
      become_user: kubedev
      community.kubernetes.helm_repository:
        name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"

    - name: Deploy ingress-nginx
      become: true
      become_user: kubedev
      community.kubernetes.helm:
        name: my-ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        update_repo_cache: yes
        release_namespace: ingress-nginx
        create_namespace: true
        values:
          hostNetwork: true
          hostPort.enabled: true
          kind: DaemonSet

    # fix for "failed calling webhook" error
    # see: https://stackoverflow.com/a/63021823
    - name: Delete ValidatingWebhookConfiguration for ingress-nginx
      become: true
      become_user: kubedev
      command: kubectl delete -A ValidatingWebhookConfiguration my-ingress-nginx-admission -n ingress-nginx

    - name: Deploy Ingress
      become: true
      become_user: kubedev
      command: kubectl create -f /home/kubedev/setup/kubernetes/ingress.yaml

    - name: Set up NFS
      shell: "{{ item }}"
      with_items:
        - mkdir /var/nfs/general -p
        - chown nobody:nogroup /var/nfs/general
        - echo '/var/nfs/general    *(rw,sync,no_subtree_check,no_root_squash,no_all_squash,insecure)' | sudo tee -a /etc/exports
        - systemctl restart nfs-kernel-server

  handlers:
    - name: docker status
      service: name=docker state=started
